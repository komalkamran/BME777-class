if(func[j] < 0){
print(c(y[i,j]))
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
print(c(y[,j]))
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
while(func[j] < 0){
m <- matrix(func[j], nrow = 3)
}
}
}
rm(m)
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
while(func[j] < 0){
m <- rbind(y[j])
j<- j+1
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
m<- rbind(y[j])
}
}
}
View(m)
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
m<- print(rbind(y[j]))
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
print(rbind(y[j]))
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
print(y[j])
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
return(list(y[j]))
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
l<- return(list(y[j]))
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
print(y[,j])
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
l <- print(y[,j])
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
k <- y[,j]
}
}
print(k)
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
apply(y, 2, print)
}
}
}
apply(y, 2, print)
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
apply(y[j], 2, sum)
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
k<-y[j]
apply(k, 2, sum)
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
apply(y[,j], 2, sum)
}
}
}
for (i in 1:nrow(func)){
for(j in 1:ncol(func)){
if(func[j] < 0){
apply(y[,j], 2,print)
}
}
}
hello<- list("Hello", 1, 3)
hello
hello[9] <- "what"
hello
hello[4:8] <- NULL
hello
yo <- c(9,2,3,4,5,6,9)
hello$yo <- yo
hello
hello$yo[1]
typeof(hello$yo)
hello[c(1, 3)]
hello[sum(hello[[2]], hello[[3]])]
hello[sum(hello[[2]], 4)]
library("ggplot2", lib.loc="~/R/win-library/3.4")
?facet_grid
M1 <- rbind(c(100,200,300,400,500), rep(10,5))
M2 <- rbind(1:5, rep(10,5))
MyAwesomeList <- list(M1, M2)
MyAwesomeList
install.packages("neuralnet")
library("neuralnet", lib.loc="~/R/win-library/3.4")
data <- cbind(c(-1 -1 1 1), c(-1 1 -1 1),
c(-1 1 1 -1))
data <- cbind(c(-1, -1,1, 1), c(-1, 1, -1, 1),
c(-1, 1, 1, -1))
data
data <- cbind(c(-1, -1,1, 1), c(-1, 1, -1, 1))
neuralnet(formula = XOR, data, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
neuralnet(data, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
data1 <- cbind(c(-1, -1,1, 1), c(-1, 1, -1, 1))
neuralnet(data= data1, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
neuralnet(fomrula = NULL, data= data1, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
neuralnet(formula = NULL, data= data1, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
neuralnet(formula = xor, data= data1, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
t<- c(-1, 1, 1, -1)
neuralnet(formula = t, data= data1, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
neuralnet(xor(data1[,1], data1[,2]), data= data1, hidden = 2,
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh)
colnames(data1) <- c("x", "y")
data1
data1 <- cbind(c(-1, -1,1, 1), c(-1, 1, -1, 1), c(-1, 1, 1, -1))
colnames(data1) <- c("x", "y", "t")
neuralnet("t~x+y", data= data1, hidden = c(2),
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = tanh,
linear.output = T)
neuralnet("t~x+y", data= data1, hidden = c(2),
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = "tanh",
linear.output = T)
wtf <- neuralnet("t~x+y", data= data1, hidden = c(2),
threshold = 0.001, learningrate = 0.1, algorithm = "backprop", act.fct = "tanh",
linear.output = T)
plot.nn(wtf)
plot.nn(wtf)
library(neuralnet)
plot.nn(wtf)
gwplot(wtf)
plot.nn(wtf)
xor(c(-1, -1,1,1), c(-1,1,-1,1))
x <- cbind(c(-1, -1,1,1), c(-1,1,-1,1))
xor(x)
xor(x = c(-1, -1,1,1), y=c(-1,1,-1,1))
wih1 <- c(0.69, 0.39, 0.41)
wih1 <- c(0.69, 0.39, 0.41)
wih2 <- c(0.65, 0.83, 0.37)
wih1 <- t(c(0.69, 0.39, 0.41))
wih2 <- t(c(0.65, 0.83, 0.37))
who1<- t(c(0.42, 0.59, 0.56))
delta_wih1 <- t(c(0,0,0,))
delta_wih2<-t(c(0,0,0,))
delta_who1<- t(c(0,0,0,))
delta_wih1 <- t(c(0,0,0))
delta_wih2<-t(c(0,0,0))
delta_who1<- t(c(0,0,0))
xor_table <- rbind(c(-1,-1,1,1), c(-1,1,-1,1), c(-1,1,1,-1))
rownames(xor_table)<- c("x1", "x2", "t")
xor_table
length(wih1)
Eta <- 0.1
eta <- 0.1
theta<- 0.001
maxIter <- 300
rm(Eta)
r<- 0
J<- c(1:300)
J<- rbind(rep(0, 300))
is.matrix(J)
J
J<- cbind(rep(0, 300))
J
act_func <- tanh(x)
d_act_func <- deriv(tanh(x))
norm_vec <- function(a) sqrt(sum(a^2))
criterion <- 1
epoch<- 300
xor_table <- rbind(c(1,1,1,1), c(-1,-1,1,1), c(-1,1,-1,1))
rownames(xor_table)<- NULL
xor_table <- rbind(c(1,1,1,1), c(-1,-1,1,1), c(-1,1,-1,1))
View(xor_table)
netj1<- wih1%*%t(xor_table[1,])
t(xor_table[1,])
t(xor_table[1,])
(xor_table[1,])
netj1<- wih1 * (xor_table[1,])
netj1<- wih1 %*% (xor_table[1,])
length(xor_table[1,])
length(wih1)
netj1<- wih1 %*% xor_table[1,]
xor_table[1,]
wih1
View(xor_table)
xor_table <- cbind(c(1,1,1,1), c(-1,-1,1,1), c(-1,1,-1,1))
netj1<- wih1 %*% xor_table[1,]
netj1<- apply(xor_table, 1, "%*%" wih1)
netj1<- apply(xor_table, 1, function (e) %*% wih1)
netj1<- apply(xor_table, 1, function (e) "%*%" wih1)
xor_table <- cbind(c(1,1,1,1), c(-1,-1,1,1), c(-1,1,-1,1))
netj1<- wih1 %*% xor_table[1,]
netj2<- wih2 %*% xor_table[1,]
y<- t(c(1, rep(0,2))
while(criterion>theta){
netj1<- wih1 %*% xor_table[1,]
netj2<- wih2 %*% xor_table[1,]
}
y<- t(c(1, rep(0,2))
y<- t(c(1, rep(0,2)))
y <- t(c(1,rep(0,2)))
zout<- t(rep(0, length(xor_table)))
setwd("~/University 4th year/BME777/bme777")
bme<- read.csv("diabetic_data_V2.csv")
which(complete.cases(bme777))
which(complete.cases(bme))
bme[!complete.cases(bme),]
View(bme)
bme[is.na(bme$age),]
bme[is.na(bme$diag_1),]
bme[bme$diag_1=='?',]
which(bme[bme$diag_1=='?',])
which(bme$diag_1=='?')
bme[which(bme$diag_1=='?'),]
y<- bme[which(bme$diag_1=='?'),]
y[c(2,8), ]
y[, (2,8)]
y[, c(2,8)]
str(y)
levels(y)
levels(y$age)
min(y$age)
which.min(y$age)
dim(y)
x<-y[, c(2,8)]
x
library("ggplot2", lib.loc="~/R/win-library/3.4")
bme<- read.csv("diabetic_data_V2.csv", na.strings = c("?"))
bme[!complete.cases(bme),]
z<-bme[!complete.cases(bme),]
dim(z)
mean(as.numeric(as.character(bme$age)))
mean(as.numeric(as.character(bme$age)), na.rm = T)
is.numeric(as.numeric(as.character(bme$age)))
str(bme)
mean(as.numeric(as.character(bme$diag_1)), na.rm = T)
bme$diag_1 <- as.numeric(as.character(bme$diag_1))
str(bme)
View(bme)
bme$diag_1 <- round(as.numeric(as.character(bme$diag_1)))
bme<- read.csv("diabetic_data_V2.csv", na.strings = c("?", "E909"))
bme$diag_1 <- round(as.numeric(as.character(bme$diag_1)))
hist(bme$diag_1)
ggplot(data=bme, aes(x=bme$diag_1, color=bme$age))+
geom_histogram()
ggplot(data=bme, aes(x=bme$diag_1, color=bme$age))+
geom_density()
ggplot(data=bme, aes(x=bme$diag_1))+
geom_density()
ggplot(data=bme, aes(x=bme$diag_1))+
geom_histogram()
ggplot(data=bme, aes(x=bme$diag_1))+
geom_histogram(aes(color=bme$age))
ggplot(data=bme, aes(x=bme$diag_1, y=bme$age))+
geom_density()
ggplot(data=bme, aes(x=bme$diag_1, y=bme$age))+
geom_boxplot()
ggplot(data=bme, aes(x=bme$age)+
geom_histogram()
ggplot(data=bme, aes(x=bme$age))+
geom_histogram()
ggplot(data=bme, aes(x=bme$diag_1))+
geom_histogram()
median(bme$diag_1, na.rm = T)
z<-bme[!complete.cases(bme),]
z
dim(z)
x<-z[, c(2,8)]
x
which(is.na(x))
View(x)
bme$age
as.factor(bme$age)
as.numeric(bme$age)
bme[as.numeric(bme$age)==2),]
bme[as.numeric(bme$age)==2,]
a <- bme[as.numeric(bme$age)==2,]
median(a$diag_1, na.rm=T)
b <-median(a$diag_1, na.rm=T)
?gsub()
as.numeric(bme$age)==2
which(as.numeric(bme$age)==2)
which(as.numeric(bme$age)==2)
z
dim(z)
x
which(as.numeric(bme$age)==2)
which(as.numeric(x$age)==2)
as.numeric(x$age)==2
x$age
as.numeric(x$age)==2
x$age<- factor(x$age)
which(as.numeric(x$age)==2)
x<-z[, c(2,8)]
levels(x$age)
x
as.numeric(x$age)
which(as.numeric(x$age)==3)
bme[c(7), ] <- b
bme<- read.csv("diabetic_data_V2.csv", na.strings = c("?", "E909"))
bme[14503,bme$diag_1 ] <- b
bme[14503,8]
bme[14503,8] <- b
bme[14503,8]
a <- bme[as.numeric(bme$age)==3),]
a <- bme[as.numeric(bme$age)==3,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==3)
bme[14503,8] <- b
a <- bme[as.numeric(bme$age)==5,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==5)
bme[c(37693,57737),8] <- b
a <- bme[as.numeric(bme$age)==6,]
b <-median(a$diag_1, na.rm=T)
z
x
levels(x$age)
a <- bme[as.numeric(bme$age)==6,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==6)
bme[c(7845,32514,73324),8] <- b
a <- bme[as.numeric(bme$age)==7,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==7)
a <- bme[as.numeric(bme$age)==7,]
b <-median(a$diag_1, na.rm=T)
a <- bme[as.numeric(bme$age)==7,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==7)
bme[c(518,1267,1488,19714,61763,86018,87181),8] <- b
a <- bme[as.numeric(bme$age)==8,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==8)
a <- bme[as.numeric(bme$age)==7,]
b <-median(a$diag_1, na.rm=T)
a <- bme[as.numeric(bme$age)==8,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==8)
bme[c(3197,56931,61369,66848),8] <- b
a <- bme[as.numeric(bme$age)==9,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==8)
which(as.numeric(x$age)==9)
bme[c(1006,49516,57058,60314,98396),8] <- b
a <- bme[as.numeric(bme$age)==10,]
b <-median(a$diag_1, na.rm=T)
which(as.numeric(x$age)==9)
which(as.numeric(x$age)==10)
x
z<-bme[!complete.cases(bme),]
zy<- bme[which(bme$diag_1=='?'),]
z<-bme[!complete.cases(bme),]
zz<- bme[which(bme$diag_1=='?'),]
z<-bme[!complete.cases(bme),]
z
?write.csv
new_diabetic_data_V2 <- write.csv(bme, file = "new_diabetic_data_V2")
new_diabetic_data_V2 <- write.csv(bme, file = "new_diabetic_data_V2.csv")
View(bme)
new_diabetic_data_V2 <- write.csv(bme, file = "new_diabetic_data_V2.csv", row.names = F)
ggplot(data=bme, aes(x=bme$diag_1))+
geom_histogram()
median(bme$diag_1)
mean(bme$diag_1)
databme777<-read.csv("new_diabetic_data_V2.csv") # study the read.csv command parameters and read the dataset csv file.
View(databme777)
which(!complete.cases(databme777))
which(complete.cases(databme777))
complete.cases(databme777)
bme[!complete.cases(bme),]
bme777[!complete.cases(bme777),]
databme777[!complete.cases(databme777),]
new_data <- databme777
d <- c(800:999)
View(new_data)
which(d%in%new_data$diag_1)
d%in%new_data$diag_1
which(new_data%in%d)
new_data%in%d
which(d % in % new_data$diag_1)
which(d %in% new_data$diag_1)
new_data$diag_1
str(new_data)
which(d %in% round(new_data$diag_1))
which(d == round(new_data$diag_1))
?compare
?compare()
which(d == round(new_data$diag_1))
?between
810 %in% d
which(round(new_data$diag_1) %in% d)
factor(bme$age)
levels(bme$age)
bme[(as.numeric(bme$age)>7 & round(new_data$diag_1) %in% d) ,]
bme[(as.numeric(bme$age)>7 & round(new_data$diag_1) %in% d) ,]
data_more_70 <- bme[(as.numeric(bme$age)>7 & round(new_data$diag_1) %in% d) ,]
levels(bme$age)
data_less_70 <- bme[(as.numeric(bme$age)<=7 & round(new_data$diag_1) %in% d) ,]
data_less_70
dim(data_more_70)
dim(data_less_70)
ggplot()+
geom_point(aes(x=data_more_70$diag_1, color= data_more_70$age))
ggplot()+
geom_point(aes(x=data_more_70$diag_1, y= c(800:1100), color= data_more_70$age))
data_more_70 <- new_data[(as.numeric(new_data$age)>7 & round(new_data$diag_1) %in% d) ,]
data_less_70 <- new_data[(as.numeric(new_data$age)<=7 & round(new_data$diag_1) %in% d) ,]
dim(data_more_70)
dim(data_less_70)
dim(new_data[round(new_data$diag_1) %in% d ,])
idk <- new_data[new_data$diag_1 %in% d,]
idk$diag_1
any(idk$diag_1 < 800 | idk$diag_1 > 999)
which(any(idk$diag_1 < 800 | idk$diag_1 > 999))
c(800:1100)
ggplot()+
geom_point(aes(x=data_more_70$diag_1, y= 800:1100, color= data_more_70$age))
ggplot(aes(x=data_more_70$diag_1, y= 800:1100, color= data_more_70$age))+
geom_point()
ggplot(aes(x=data_more_70$diag_1, color= data_more_70$age))+
geom_point()
ggplot(data=new_data, aes(x=data_more_70$diag_1, color= data_more_70$age))+
geom_point()
final <- rbind(data_less_70, data_more_70)
data_less_70$state <- 1
data_more_70$state <- 2
final <- rbind(data_less_70, data_more_70)
ggplot(data=final, aes(x=final$diag_1, color= final$state))+
geom_point()
ggplot(data=final, aes(x=final$diag_1, y = nrow(final) color= final$state))+
geom_point()
ggplot(data=final, aes(x=final$diag_1, y = nrow(final),color= final$state))+
geom_point()
ggplot(data=final, aes(x=final$diag_1,color= final$state))+
geom_density()
ggplot(data=final, aes(x=final$diag_1,color= final$state))+
geom_histogram()
ggplot(data=final, aes(x=final$diag_1,color= final$state))+
geom_point()
ggplot(data=final, aes(x=final$diag_1, y = final$age, color= final$state))+
geom_point()
ggplot(data=final, aes(x=final$age, y = final$diag_1, color= final$state))+
geom_point()
ggplot(data=final, aes(x=final$age, y = final$state, color= final$age))+
geom_boxplot()
ggplot(data=final, aes(x=final$state, y = final$diag_1, color= final$age))+
geom_boxplot()
d <- 800:999
